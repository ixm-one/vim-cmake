*cmake.txt*        A plugin for CMake light years ahead of the rest

Author: Isabella Muerte <@slurpsmadrips>
License: MIT License

                             Syntax Highlighting
                            Project Configuration
                                  And More!

INTRODUCTION                                                              *cmake*

===============================================================================
CONTENTS                                                         *cmake-contents*

        1. Commands..............................................|cmake-commands|
        2. Settings..............................................|cmake-settings|
        3. Generate..............................................|cmake-generate|
        4. Building..............................................|cmake-building|

===============================================================================
COMMANDS                                                         *cmake-commands*

                            *cmake-:CMakeGenerateSyntax* *:CMakeGenerateSyntax*

:CMakeGenerateSyntax        Generates the syntax files included by this
                            plugin. This command is automatically called when
                            the plugin internal cache directory does not exist,
                            and when the contents of 'runtimepath', 'packpath',
                            and |g:cmake_syntax_path| have changed.
                            This operation can be expensive, so call
                            it after updating the plugin, or if you're adding
                            your own API files to a project.


                                *cmake-:CMakeGenerateTags* *:CMakeGenerateTags*

:CMakeGenerateTags          Generates the tag file for the current project.

:CMakeGenerateKits          Generates CMake Kits for use.

                                              *cmake-:CMakeWhisper* *:CMakeWhisper*

:CMakeWhisper               Turns all instances of `UPPERCASE_COMMAND_CALLS`
                            into their lowercase counterparts in the current
                            buffer. This is useful when converting older
                            projects or updating code where people have
                            copy-pasted old CMake from the internet. CMake has
                            supported case-insensitive commands for over a
                            decade. Please just use the lowercase form. This
                            plugin does NOT support anything but the
                            "canonical" spelling of commands and functions.

===============================================================================
SETTINGS                                                         *cmake-settings*


                                                            *g:cmake_syntax_path*

A list of paths, absolute or relative, that will be searched in addition to
'runtimepath' and 'packpath' when generating syntax files for the API. This
value is empty by default.

                                                         *g:cmake_syntax_disable*

When |TRUE|, `:CMakeGenerateSyntax` is only called when the cache directory is
missing, or when manually invoked. This option is ignored if
|g:cmake_syntax_manual| is |TRUE|

                                                          *g:cmake_syntax_manual*

When |TRUE|, all automatic syntax generation and events are disabled entirely.
`:CMakeGenerateSyntax` never runs unless manually executed.

                                                        *g:cmake_syntax_loglevel*

One of "warn", "error", "quiet", or "debug". Affects output of
|:CMakeGenerateSyntax|. When set to "warn", JSON errors are echoed as messages
with with |:echohl| set to |hl-WarningMsg|. When set to "error", |:echoerr| is
used instead. When set to "quiet", all logging output is silenced. When set to
"debug", additional debug information is output as messages. Any other values
are treated as "warn".

                                                        *g:cmake_build_directory*

This must be a relative path name. It is the name of the output directory where
projects will by built. By default, this value is set to "build", and rarely
will it be changed. 

Note: This MAY NOT be the same as the source directory for a given project.
The configure step will error out before every invoking CMake.


                                                         *g:cmake_tool_generator*

The preferred generator to use when building a CMake project. If not set and
"ninja" is the default, followed by make, and then NMake on Windows.

                                                          *g:cmake_tool_yamlexpr*

This can be either a |Funcref|, or a |String| representing a |Function| name.
When called, it will be passed a |String| which must be parsed as YAML and then
returned as JSON. If successful, this plugin can read the "cmake-variants.yaml"
file that https://github.com/microsoft/vscode-cmake-tools currently supports.
