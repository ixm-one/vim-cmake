*cmake.txt*        A plugin for CMake light years ahead of the rest

                             Syntax Highlighting
                            Project Configuration
                                  And More!

INTRODUCTION                                                              *cmake*

===============================================================================
CONTENTS                                                         *cmake-contents*

        1. Commands..............................................|cmake-commands|
        2. Settings..............................................|cmake-settings|
        3. Generate..............................................|cmake-generate|
        4. Building..............................................|cmake-building|

===============================================================================
COMMANDS                                                         *cmake-commands*

                                          *cmake-:CMakeConfigure* *:CMakeConfigure*
                                                  *cmake-:CMakeBuild* *:CMakeBuild*
                                                  *cmake-:CMakeClean* *:CMakeClean*
                                                    *cmake-:CMakeTest* *:CMakeTest*
                                                      *cmake-:CMakeRun* *:CMakeRun*
                                                            *cmake-:CMake* *:CMake*

                                *cmake-:CMakeGenerateSyntax* *:CMakeGenerateSyntax*

:CMakeGenerateSyntax        Generates the syntax files included by this
                            plugin. This command is automatically called when
                            the plugin internal cache directory does not exist,
                            and when the contents of 'runtimepath', 'packpath',
                            and |g:cmake_syntax_path| have changed.
                            This operation can be expensive, so call
                            it after updating the plugin, or if you're adding
                            your own API files to a project.


                                *cmake-:CMakeGenerateTags* *:CMakeGenerateTags*

:CMakeGenerateTags          Generates the tag file for the current project.

:CMakeGenerateKits          Generates CMake Kits for use.

                                              *cmake-:CMakeWhisper* *:CMakeWhisper*

:CMakeWhisper               Turns all instances of `UPPERCASE_COMMAND_CALLS`
                            into their lowercase counterparts in the current
                            buffer. This is useful when converting older
                            projects or updating code where people have
                            copy-pasted old CMake from the internet. CMake has
                            supported case-insensitive commands for over a
                            decade. Please just use the lowercase form. This
                            plugin does NOT support anything but the
                            "canonical" spelling of commands and functions.

===============================================================================
SETTINGS                                                         *cmake-settings*


                                                              *g:cmake_tool_path*

Path to the CMake executable that will be run. This is provided for cases CMake
is installed in a non-typical location, or if it is not on the system $PATH.

                                                         *g:cmake_tool_generator*

The preferred build system generator to use when building a CMake project.
When set, it will be used over $CMAKE_GENERATOR. If neither are set, "Ninja" is
used if available, followed by GNU Make. If the current platform is Windows,
NMake is also tried if GNU Make is not found. NOTE: It is highly recommended
that Ninja is used, especially if speed is desired.

                                   *g:cmake_tool_log_level* *g:cmake_tool_loglevel*

Sets the verbosity of message output from CMake via the --log-level command
line option. When not set, the --log-level parameter is not passed to CMake.
Valid values are "error", "warn", "notice", "status", "verbose", "debug", and
"trace". NOTE: Older versions of CMake might not support the --log-level
parameter. Additionally, older versions treat the parameter as --loglevel. This
plugin handles both cases.

                                                          *g:cmake_tool_settings*

This must be a dictionary of "default" options. Options set here have the
lowest level of precedence compared to other sources and will never overwrite
previously set fields. See |cmake-generate| for the various fields that can be
set.

                                                              *g:cmake_tool_kits*

This must be a dictionary of valid build kits. See |cmake-internals-vscode| for
more information.

                                                          *g:cmake_tool_yamlfunc*

This can be either a |Funcref|, or a |String| representing a |Function| name.
When called, it will be passed a |String| which must be parsed as YAML and then
returned as JSON. If successful, this plugin can read the "cmake-variants.yaml"
file that https://github.com/microsoft/vscode-cmake-tools currently supports.
If this is not set, "cmake-variants.yaml" files cannot be read.

-------------------------------------------------------------------------------
BUFFER SPECIFIC SETTINGS                                  *cmake-settings-buffer*

The following settings are buffer specific. However, when opening a buffer
under `b:cmake_source_dir`, the plugin will automatically set these values if
possible.

                                                             *b:cmake_source_dir*

Absolute path to the source directory for the current buffer. i.e., the
directory where the top-level CMakeLists.txt file was passed. This variable is
set after calling |:CMakeConfigure|, or |:CMakeLocateProject|.

                                                              *b:cmake_build_dir*

Path to the CMake build directory. i.e., the directory where CMakeCache.txt is
stored. This variable is set after calling |:CMakeConfigure|, or
|:CMakeLocateProject|.

                                                                *b:cmake_variant*
